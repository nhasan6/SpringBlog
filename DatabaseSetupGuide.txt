Connection Instructions

1. Open SQL Server Configuration Manager
- In the application, expand Server Network Configuration, Click on Protocols for MSSQLSERVER 
Enable TCP/IP

2. Launch SQL Sever Management Studio
- Connect to your local database 
- Server name : "localhost"
- Authentication : "Windows Authentication"

3. Create you DB 
- right click on datases, new database named "blog-db"

4. Enable Mixed Mode Authentication (Allows both Windows and SQL Server Users)
- Run this query in the master DB

EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE',
    N'Software\Microsoft\MSSQLServer\MSSQLServer',
    N'LoginMode', REG_DWORD, 2;

5. Create SQL Server Login

-- Switch to master database first
USE master;
 
-- Create the login (this is like creating a "key" to enter the server)
CREATE LOGIN bloguser WITH PASSWORD = 'BlogPassword123!';

6. Create Database User

-- Switch to your blog database
USE [blog-db];
 
-- Create user (this gives the login access to THIS specific database)
CREATE USER bloguser FOR LOGIN bloguser;
 
-- Grant full permissions to this database
ALTER ROLE db_owner ADD MEMBER bloguser;

7. Create Required Tables

CREATE TABLE Users (
   UserId INT PRIMARY KEY NOT NULL IDENTITY(1,1),
   FirstName VARCHAR(50) NOT NULL,
   LastName VARCHAR(50),
   Email VARCHAR(100) NOT NULL UNIQUE,
   Username VARCHAR(30) NOT NULL UNIQUE,
   Password VARCHAR(30) NOT NULL);


CREATE TABLE Posts (
   PostId INT PRIMARY KEY NOT NULL IDENTITY(1,1),
   AuthorId INT NOT NULL,
   CONSTRAINT FkAuthor FOREIGN KEY (AuthorId)
   REFERENCES Users(UserId),
   DateCreated DATETIME2 NOT NULL DEFAULT GETDATE(),
   LastUpdated DATETIME2 NOT NULL DEFAULT GETDATE(),
   Title VARCHAR(100) NOT NULL,
   Content VARVAR(MAX) NOT NULL);

8. Update pom.xml file with these dependencies:

<!-- SQL Server JDBC Driver -->
<dependency>
    <groupId>com.microsoft.sqlserver</groupId>
    <artifactId>mssql-jdbc</artifactId>
    <version>12.4.2.jre11</version>
</dependency>
 
<!-- Spring Boot JPA Starter (for database operations) -->
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>

9. Update src/main/resources/application.properties file with appropriate configurations

# Database Connection Configuration
spring.datasource.url=jdbc:sqlserver://localhost;databaseName=blog-db;encrypt=false;trustServerCertificate=true
spring.datasource.username=bloguser
spring.datasource.password=BlogPassword123!
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
 
# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

10. Transform Models into JPA Entities and Refactor Code

11. Replace DAO's with JPA Repositories

12. Update Service Classes

13. Update Main Application Class with @EnableJpaRepositories and @EntityScan